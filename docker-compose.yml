# docker-compose.yml
version: '3.8'

services:
  # Multi-Agent Application
  multi-agent-app:
    build: .
    container_name: multi-agent-demo
    environment:
      # Azure OpenAI Configuration (from .env file)
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - OPENAI_API_VERSION=${OPENAI_API_VERSION}
      
      # OpenTelemetry Configuration
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_HEADERS=
      - OTEL_SERVICE_NAME=multi-agent-demo
      - OTEL_RESOURCE_ATTRIBUTES=service.version=1.0.0,environment=demo
      
      # Traceloop Configuration
      - TRACELOOP_BASE_URL=http://otel-collector:4318
      - TRACELOOP_TELEMETRY=false
    depends_on:
      otel-collector:
        condition: service_healthy
    networks:
      - observability
    command: python main.py

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.95.0
    container_name: otel-collector
    command: ["--config=/etc/otelcol-contrib/config.yaml"]
    volumes:
      - ./otel-config.yaml:/etc/otelcol-contrib/config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:13133/"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - observability

  # OpenLIT Platform
  openlit:
    image: ghcr.io/openlit/openlit:latest
    container_name: openlit
    ports:
      - "3000:3000"
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
      - CLICKHOUSE_DATABASE=otel
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - observability

  # ClickHouse Database
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "9000:9000"
      - "8123:8123"
    environment:
      - CLICKHOUSE_DB=otel
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - observability

  # Jaeger for Trace Visualization
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - observability

networks:
  observability:
    driver: bridge

volumes:
  clickhouse_data: